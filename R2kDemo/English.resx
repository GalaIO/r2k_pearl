<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="strBtnClearEditData" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="strBtnClearListView" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="strBtnConnect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="strBtnDefaultParams" xml:space="preserve">
    <value>Default Params</value>
  </data>
  <data name="strBtnDisconnect" xml:space="preserve">
    <value>Disconnect</value>
  </data>
  <data name="strBtnGetAnts" xml:space="preserve">
    <value>Get</value>
  </data>
  <data name="strBtnGetDI" xml:space="preserve">
    <value>Get </value>
  </data>
  <data name="strBtnKillTag" xml:space="preserve">
    <value>Destroy Tag</value>
  </data>
  <data name="strBtnModifyDev" xml:space="preserve">
    <value>Modify Device</value>
  </data>
  <data name="strBtnPerform" xml:space="preserve">
    <value>Perform</value>
  </data>
  <data name="strBtnReadOnce" xml:space="preserve">
    <value>Inventory Once</value>
  </data>
  <data name="strBtnReadTagData" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="strBtnSearchDev" xml:space="preserve">
    <value>Search Device</value>
  </data>
  <data name="strBtnSetAlive" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="strBtnSetAnts" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="strBtnSetDevNo" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="strBtnSetDO" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="strBtnSetNeighJudge" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="strBtnSetParams" xml:space="preserve">
    <value>Set Params</value>
  </data>
  <data name="strBtnStartReadData" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="strBtnStopReadData" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="strBtnUpdate" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="strBtnWriteTagData" xml:space="preserve">
    <value>Write</value>
  </data>
  <data name="strCbAnt1" xml:space="preserve">
    <value>No.1</value>
  </data>
  <data name="strCbAnt2" xml:space="preserve">
    <value>No.2</value>
  </data>
  <data name="strCbAnt3" xml:space="preserve">
    <value>No.3</value>
  </data>
  <data name="strCbAnt4" xml:space="preserve">
    <value>No.4</value>
  </data>
  <data name="strCbIn1" xml:space="preserve">
    <value>In1</value>
  </data>
  <data name="strCbIn2" xml:space="preserve">
    <value>In2</value>
  </data>
  <data name="strGbAntParams" xml:space="preserve">
    <value>Ant Params</value>
  </data>
  <data name="strGbCommMode" xml:space="preserve">
    <value>CommMode</value>
  </data>
  <data name="strGbDestroyTag" xml:space="preserve">
    <value>Destroy Tag</value>
  </data>
  <data name="strGbDevParams" xml:space="preserve">
    <value>Device Params</value>
  </data>
  <data name="strGbIOOpr" xml:space="preserve">
    <value>I/O Operation</value>
  </data>
  <data name="strGbLockTag" xml:space="preserve">
    <value>Lock/Unlock</value>
  </data>
  <data name="strGbNetParams" xml:space="preserve">
    <value>Network Params</value>
  </data>
  <data name="strGbRWData" xml:space="preserve">
    <value>Read/Write Tag Data</value>
  </data>
  <data name="strGbSPParams" xml:space="preserve">
    <value>SerialPort Params</value>
  </data>
  <data name="strLabAlive" xml:space="preserve">
    <value>Alive Time</value>
  </data>
  <data name="strLabAntUnit" xml:space="preserve">
    <value>MS      1/10dbm</value>
  </data>
  <data name="strLabBaudRate" xml:space="preserve">
    <value>Baud Rate</value>
  </data>
  <data name="strLabCheckBits" xml:space="preserve">
    <value>Parity</value>
  </data>
  <data name="strLabCommPort" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="strLabCount" xml:space="preserve">
    <value>Counts:</value>
  </data>
  <data name="strLabDataBits" xml:space="preserve">
    <value>Data Bits</value>
  </data>
  <data name="strLabDestIP" xml:space="preserve">
    <value>Destination IP</value>
  </data>
  <data name="strLabDestPort" xml:space="preserve">
    <value>Destination Port</value>
  </data>
  <data name="strLabDestrlyPwd" xml:space="preserve">
    <value>Destroy Password</value>
  </data>
  <data name="strLabDestroyAccessPwd" xml:space="preserve">
    <value>Access Password</value>
  </data>
  <data name="strLabDevNo" xml:space="preserve">
    <value>Device No.</value>
  </data>
  <data name="strLabGateway" xml:space="preserve">
    <value>Gateway</value>
  </data>
  <data name="strLabIPAdd" xml:space="preserve">
    <value>IP Address</value>
  </data>
  <data name="strLabIPMode" xml:space="preserve">
    <value>IP Mode</value>
  </data>
  <data name="strLabLength" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="strLabLockAccessPwd" xml:space="preserve">
    <value>Access Password</value>
  </data>
  <data name="strLabLockBank" xml:space="preserve">
    <value>Operation Bank</value>
  </data>
  <data name="strLabLockType" xml:space="preserve">
    <value>Lock Type</value>
  </data>
  <data name="strLabMask" xml:space="preserve">
    <value>Subnet Mask</value>
  </data>
  <data name="strLabNeighJudge" xml:space="preserve">
    <value>Adja-discriminant</value>
  </data>
  <data name="strLabNetMode" xml:space="preserve">
    <value>Network Mode</value>
  </data>
  <data name="strLabPort" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="strLabPromotion" xml:space="preserve">
    <value>Below setting only use in TCP Client:</value>
  </data>
  <data name="strLabRWAccessPwd" xml:space="preserve">
    <value>Access Password</value>
  </data>
  <data name="strLabRWBank" xml:space="preserve">
    <value>R/W Bank</value>
  </data>
  <data name="strLabRWData" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="strLabStartAdd" xml:space="preserve">
    <value>Start Address</value>
  </data>
  <data name="strLabTagCount" xml:space="preserve">
    <value>Tag Counts:</value>
  </data>
  <data name="strCbOut1" xml:space="preserve">
    <value>Out1</value>
  </data>
  <data name="strCbOut2" xml:space="preserve">
    <value>Out2</value>
  </data>
  <data name="strRbAsc" xml:space="preserve">
    <value>Asceding</value>
  </data>
  <data name="strRbDesc" xml:space="preserve">
    <value>Desceding</value>
  </data>
  <data name="strRbNet" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="strRbSerialPort" xml:space="preserve">
    <value>Serial Port</value>
  </data>
  <data name="strItemPerUnwritable" xml:space="preserve">
    <value>Permanence unwritable</value>
  </data>
  <data name="strItemPerWritable" xml:space="preserve">
    <value>Permanence writable</value>
  </data>
  <data name="strItemSecuLock" xml:space="preserve">
    <value>Security lock</value>
  </data>
  <data name="strItemUnlock" xml:space="preserve">
    <value>Unlock</value>
  </data>
  <data name="strLvHeadAntNo" xml:space="preserve">
    <value>AntNo</value>
  </data>
  <data name="strLvHeadCount" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="strLvHeadDevNo" xml:space="preserve">
    <value>DevNo</value>
  </data>
  <data name="strLvHeadEPC" xml:space="preserve">
    <value>EPC</value>
  </data>
  <data name="strLvHeadNo" xml:space="preserve">
    <value>No.</value>
  </data>
  <data name="strTpGeneral" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="strTpSetCommParam" xml:space="preserve">
    <value>CommParams Setting</value>
  </data>
  <data name="strTpSetReaderParam" xml:space="preserve">
    <value>Reader Params Setting</value>
  </data>
  <data name="strTpTagAccess" xml:space="preserve">
    <value>Tag Access</value>
  </data>
  <data name="strZlHeadIP" xml:space="preserve">
    <value>IP Address</value>
  </data>
  <data name="strZlHeadMAC" xml:space="preserve">
    <value>MAC</value>
  </data>
  <data name="strZlHeadNo" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="strZlHeadPort" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="stMsgNJValid" xml:space="preserve">
    <value>Valid values is 0 to 255</value>
  </data>
  <data name="strMsgAliveNotEmpty" xml:space="preserve">
    <value>the alive time is none</value>
  </data>
  <data name="strMsgAliveValid" xml:space="preserve">
    <value>Valid values is 0 to 255</value>
  </data>
  <data name="strMsgConnectFailure" xml:space="preserve">
    <value>Failed to connect device</value>
  </data>
  <data name="strMsgDevNoNotEmpty" xml:space="preserve">
    <value>The device number is none</value>
  </data>
  <data name="strMsgDevNoValid" xml:space="preserve">
    <value>Valid values is 0 to 255</value>
  </data>
  <data name="strMsgFailedDes" xml:space="preserve">
    <value>Failed to destroy tag</value>
  </data>
  <data name="strMsgFailedGetAnt" xml:space="preserve">
    <value>Failed to get the antenna params</value>
  </data>
  <data name="strMsgFailedGetIn" xml:space="preserve">
    <value>Failed to get input port state</value>
  </data>
  <data name="strMsgFailedOpr" xml:space="preserve">
    <value>Operating failed</value>
  </data>
  <data name="strMsgFailedReadData" xml:space="preserve">
    <value>Failed to read data</value>
  </data>
  <data name="strMsgFailedSetAlive" xml:space="preserve">
    <value>Failed to set alive time</value>
  </data>
  <data name="strMsgFailedSetAnt" xml:space="preserve">
    <value>Failed to set the antenna params</value>
  </data>
  <data name="strMsgFailedSetCommParam" xml:space="preserve">
    <value>Failed to set communication params</value>
  </data>
  <data name="strMsgFailedSetDevNo" xml:space="preserve">
    <value>Failed to set the device number</value>
  </data>
  <data name="strMsgFailedSetNJ" xml:space="preserve">
    <value>Failed to set Adjacent discriminant</value>
  </data>
  <data name="strMsgFailedSetOut" xml:space="preserve">
    <value>Failed to set output port</value>
  </data>
  <data name="strMsgFailedWrite" xml:space="preserve">
    <value>Failed to write data</value>
  </data>
  <data name="strMsgInitFailure" xml:space="preserve">
    <value>Failed to initialize device</value>
  </data>
  <data name="strMsgInvalidIPAdd" xml:space="preserve">
    <value>Invalid IP Address</value>
  </data>
  <data name="strMsgInvalidPort" xml:space="preserve">
    <value>Invalid Port</value>
  </data>
  <data name="strMsgLengthDiff" xml:space="preserve">
    <value>the data's length is differend from length specifications</value>
  </data>
  <data name="strMsgNJNotEmpty" xml:space="preserve">
    <value>Adjacent discriminant time is none</value>
  </data>
  <data name="strMsgNotDigit" xml:space="preserve">
    <value>Not digit characters is contained</value>
  </data>
  <data name="strMsgPowerValid" xml:space="preserve">
    <value>Valid values is 200 to 300</value>
  </data>
  <data name="strMsgPwdInvalidChar" xml:space="preserve">
    <value>Contains illegal characters(0-9,A-F)</value>
  </data>
  <data name="strMsgPwdMustEight" xml:space="preserve">
    <value>Password must be 8 bits</value>
  </data>
  <data name="strMsgSelecOprBank" xml:space="preserve">
    <value>Please select the bank</value>
  </data>
  <data name="strMsgSelectBaudRate" xml:space="preserve">
    <value>Please select a valid baudrate</value>
  </data>
  <data name="strMsgSelectDataBits" xml:space="preserve">
    <value>Please select data bits</value>
  </data>
  <data name="strMsgSelectIPMode" xml:space="preserve">
    <value>Please select IP mode</value>
  </data>
  <data name="strMsgSelectLength" xml:space="preserve">
    <value>Please select the length</value>
  </data>
  <data name="strMsgSelectNetMode" xml:space="preserve">
    <value>Please select network mode</value>
  </data>
  <data name="strMsgSelectOprType" xml:space="preserve">
    <value>Please select the lock type</value>
  </data>
  <data name="strMsgSelectParity" xml:space="preserve">
    <value>Please select parity</value>
  </data>
  <data name="strMsgSelectPort" xml:space="preserve">
    <value>Please select a port</value>
  </data>
  <data name="strMsgSelectRWBank" xml:space="preserve">
    <value>Please select read/write bank</value>
  </data>
  <data name="strMsgSelectStartAdd" xml:space="preserve">
    <value>Please select the start address</value>
  </data>
  <data name="strMsgSucceedDes" xml:space="preserve">
    <value>Succeed to destroy tag</value>
  </data>
  <data name="strMsgSucceedGetAnt" xml:space="preserve">
    <value>Succeed to get the antenna params</value>
  </data>
  <data name="strMsgSucceedOpr" xml:space="preserve">
    <value>Operating succeed</value>
  </data>
  <data name="strMsgSucceedSetAlive" xml:space="preserve">
    <value>Succeed to set alive time</value>
  </data>
  <data name="strMsgSucceedSetAnt" xml:space="preserve">
    <value>Succeed to set the antenna params</value>
  </data>
  <data name="strMsgSucceedSetCommParam" xml:space="preserve">
    <value>Succeed to set communication params</value>
  </data>
  <data name="strMsgSucceedSetDevNo" xml:space="preserve">
    <value>Succeed to set the device number</value>
  </data>
  <data name="strMsgSucceedSetNJ" xml:space="preserve">
    <value>Succeed to set adjacent discriminant</value>
  </data>
  <data name="strMsgSucceedSetOut" xml:space="preserve">
    <value>Succeed to set output port</value>
  </data>
  <data name="strMsgSucceedWrite" xml:space="preserve">
    <value>Succeed to write data</value>
  </data>
  <data name="strMsgValidWT" xml:space="preserve">
    <value>Valid values is 100 to 10000</value>
  </data>
  <data name="strCbSaveFile" xml:space="preserve">
    <value>Save as file</value>
  </data>
</root>